defpackage libfive-gfx :
  import core
  import math
  import collections
  import libfive
  import gl
  import font
  import gfx
  import geom
  import geom-gfx

defmethod render (bt:BoundedTree) -> False :
  ;; TODO MAKE PARAMETERIZABLE
  ;; println-all(["RENDERING BT"])
  val mesh = to-mesh(bt)
  ;; println-all(["MESH: V = " length(vertices(mesh)) " F = " length(faces(mesh))])
  if name(bt) is Symbol :
    gl-push-matrix()
    gl-push-attrib(GL-CURRENT-BIT)
    gl-color3f(0.5f, 0.5f, 1.0f)
    val EPSILON = 1.0e-6f
    gl-translate3(set-elt(center(bounds(bt)), 2, z(hi(bounds(bt))) + EPSILON))
    val size = dims(bounds(bt))
    draw-text(x(size), y(size), *font*, to-string(name(bt)))
    gl-pop-attrib()
    gl-pop-matrix()
  render(mesh)
  ;; tree-delete(tree(bt))
  gl-push-attrib(GL-CURRENT-BIT)
  gl-color3f(1.0f, 0.5f, 0.5f)
  gl-point-size(20.0f)
  for point in points(shape(bt)) do :
    render(point)
  gl-pop-attrib()

defmethod render (lay:TreeAssembly) -> False :
  gl-push-matrix()
  gl-mult-matrix(mat(lay))
  gl-push-attrib(GL-CURRENT-BIT)
  gl-color4(color(lay))
  for child in trees(lay) do :
    render(child)
  gl-pop-attrib()
  gl-pop-matrix()

